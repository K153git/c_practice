给你一个 n x n 的 方形 整数数组 matrix ，请你找出并返回通过 matrix 的下降路径 的 最小和 。

下降路径 可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列（即位于正下方或者沿对角线向左或者向右的第一个元素）。具体来说，位置 (row, col) 的下一个元素应当是 (row + 1, col - 1)、(row + 1, col) 或者 (row + 1, col + 1) 。

来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/minimum-falling-path-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

#define MIN(a,b) a<b?a:b
int BMIN(int a,int b,int c)
{
    int m=0;
    m=a<b?a:b;
    m=m<c?m:c;
    return m;
}
int minFallingPathSum(int** matrix, int matrixSize, int* matrixColSize){
    int min=10000;
    int i,j=0;
    for(i=1;i<matrixSize;++i)
    {
        for(j=0;j<matrixSize;++j)
        {
            if(j==0)
            {
                matrix[i][j]+=MIN(matrix[i-1][j],matrix[i-1][j+1]);
            }
            else  if(j==matrixSize-1)
            {
                matrix[i][j]+=MIN(matrix[i-1][j],matrix[i-1][j-1]);
            }
            else
            {
                matrix[i][j]+=BMIN(matrix[i-1][j-1],matrix[i-1][j],matrix[i-1][j+1]);
            }
        }
    }
    for(i=0;i<matrixSize;++i)
    {
        if(matrix[matrixSize-1][i]<min)
        {
            min=matrix[matrixSize-1][i];
        }
    }
    return min;
}

