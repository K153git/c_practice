给你一个正整数数组 arr（可能存在重复的元素），请你返回可在 一次交换（交换两数字 arr[i] 和 arr[j] 的位置）后得到的、按字典序排列小于 arr 的最大排列。

如果无法这么操作，就请返回原数组。

来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/previous-permutation-with-one-swap
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* prevPermOpt1(int* arr, int arrSize, int* returnSize){
    int i,j=0;
    int max=0;
    int loc=0;
    *returnSize=arrSize;
    for(i=arrSize-2;i>=0;--i)
    {
        max=0;
        loc=i;
        for(j=i+1;j<arrSize;++j)
        {
            if(arr[j]<arr[i]&&arr[j]>max)
            {
                max=arr[j];
                loc=j;
            }
        }
        if(loc!=i)
        {
        arr[i]=arr[i]+arr[loc];
        arr[loc]=arr[i]-arr[loc];
        arr[i]=arr[i]-arr[loc];
        return arr;
        }
    }
    return arr;
}
